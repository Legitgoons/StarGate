user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	
	## 추가: 클라인트 요청 최대 바디 사이즈 설정
	client_max_body_size 12M;
	
	## 추가: 웹요청을 받아 프록시 서버로 전달
	server {
		server_name www.stargate-a406.kro.kr;
		location / {
			# front later
		}
		location /api {
			proxy_set_header HOST $host;
			proxy_pass http://127.0.0.1:8080;
			proxy_redirect off;
		}
	
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/www.stargate-a406.kro.kr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/www.stargate-a406.kro.kr/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

	server {
    if ($host = www.stargate-a406.kro.kr) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


		server_name www.stargate-a406.kro.kr;
		listen 80;
    # return 404; # managed by Certbot
	#수정: http request https로 redirect
	location / {
		return 301 https://$host$request_uri;
	}
	#location /api { # 나중에 테스트
	#	return 301 https://$host/api$request_uri;
	#}
}}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
# 
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
